# Material related to the CoEGSS project

CoEGSS = Center of Excellence on Global Systems Science

* To read:
** Large-Scale Computing Techniques for Complex System Simulations
Werner Dubitzky, Krzysztof Kurowski, Bernard Schott
http://eu.wiley.com/WileyCDA/WileyTitle/productCd-1118130499.html
DubitzkyKurowskiSchott_2012_Large-scaleComputingTechniquesForComplexSystemSimulations.pdf
Mainly Chapter 5.
** Parsing JSON with Aeson
https://www.fpcomplete.com/school/starting-with-haskell/libraries-and-frameworks/text-manipulation/json
*** 2015-10-22: Read 80%.
* Read
** The Tragedy of the Commons
Garrett Hardin
+ Author Affiliations
Science  13 Dec 1968:
Vol. 162, Issue 3859, pp. 1243-1248
DOI: 10.1126/science.162.3859.1243

2016-10-06: Read

** Synthetic Populations tutorial
Slides for tutorial at IJCAI, New York City, July 10 2016
We hope to update the slides and supplementary material
continually over the next year.
The current version of the slides can be found at:
http://staff.vbi.vt.edu/swarup/synthetic_population_tutorial/
Suggested citation:
Samarth Swarup and Madhav V. Marathe. Generating Synthetic
Populations for Social Modeling: Tutorial at the International Joint
Conference on Artificial Intelligence (IJCAI). New York City, July 10
2016. Biocomplexity Institute of Virginia Tech, Technical Report NDSSLTR-2016-044.

NDSSL = Network Dynamics and Simulation Science Laboratory

*** slide 7
+ Methodology:
++ Population Synthesis
++ Activity Assignment
++ Location Assignment
++ Network Construction
*** slide 15
+ Agents have
++ nominal (age, income),
++ declarative (activities they take) and
++ procedural (e.g. how to drive) data
*** slide 19
+ Scaling to global systems is even more challenging
++ Initial storage size of data: 7.7 Terabytes

Coarse populations
Countries:    220
Workplaces:   219.5 Million
Individuals:    7.2 Billion
Interactions:  45 Billion
Households:     2.6 Billion
Schools:       51.6 Million
++ Storage: rule of thumb 1-2 GB/million individuals
++ Current computation time estimate (including testing, data transfers, etc.): 45 days

Computations and performance data assume extensive and powerful hardware.

*** slide 24-25: POPULATION SYNTHESIS

Goal: To generate a population of agents with realistic demographic attributes
Input:
+ Distributions over demographics (marginal distributions),
+ A sample of census records

Method: Iterative Proportional Fitting (IPF)

*** slide 27: US census data resolution

Block group (600-3000 people)

*** slide 28:

Public Use Microdata Areas (PUMAs) are statistical
geographic areas defined for the dissemination of Public
Use Microdata Sample (PUMS) data.
– This is a 5% sample of the Census records.
– A PUMA contains at least 100,000 people.
– PUMAs are built on Census tracts and counties.

The US data is really useful. Marginal distributions down to block
group level and household + age correlation at "PUMS" level.

*** slide 32 to 53: IPF explanation and example


*** slide 54

+ TRANSIMS - https://www.fhwa.dot.gov/planning/tmip/resources/transims/
++ Used for accurate and sensitive travel forecasts for transportation planning and emission analysis
+ URBANSIM - http://www.urbansim.com/urbansim/
++ To simulate metropolitan real estate markets and study the impact of land use policies
+ EUROMOD - https://www.euromod.ac.uk/
++ EU based microsimulation to calculate effects of taxes and benefits on incomes and work incentives
+ POHEM - http://www.statcan.gc.ca/eng/microsimulation/modgen/new/mods/pohem
++ Canada based Longitudinal population health microsimulation model to rationally compare competing health intervention alternatives
+ TRIM - http://trim.urban.org/T3Welcome.php
++ to understand the potential outcomes of public policy changes such as welfare reform, tax reform, and national health care reform.

*** slide 55: several references (starting from 1940)

*** slide 56 onwards: Activity assignment

+ Goal: To assign a realistic daily activity sequence to each agent
+ Input:
++ A synthetic population of agents with demographics,
++ A household activity survey
+ Methods:
++ Classification and Regression Trees
++ Fitted Values Method

*** slide 62-74: Activity assignment explanation + method comparison

Several slides show three graphs of the result using three different
methods. They differ significantly which indicates it is important to
check that results are reasonably stable over different methods => we
should implement more than one method.

Most of the details here are mainly important for cases when
transportation or physical contact is important to track. (For traffic
management, infrastructure investments, spreading of contagious
disease, etc.

*** slide 75: Location assignment

+ Goal: To assign a geographical location for each activity for each agent
+ Input:
++ A synthetic population of agents with demographics and daily activity sequences
++ Geographical data on roads, residence types, business locations, school locations, and other points of interest
+ Methods:
++ Gravity model
++ Trip chaining model
++ Radiation model

*** slides following: (up to 83)

Assigning Home location: based on detailed maps of dwelling units and
building capacity, pick locations using the resulting density at
random (based on household type, income, etc?).

Then schools are assigned reasonably close using an optimisation model.

Finally other activities are assigned.

This gives local travel as part of the daily commute schedule.

*** slide 84: Travel intensity (longer distance travel)

*** Gravity model (slides 84-88): described in a negative way.

*** Radiation model (slides 89-92):

(TODO: page 90 has several symbols missing)

Problem identified: the euclidean distance is not the right metric in
reality. You need a road of some sort (and speed, congestion, etc.).

*** Generalized radiation model (93-94)
*** slide 95 - 111: Network construction
Four case studies where the original network structure has been
compared to more precise data. It turns out that the orverall
parameters look very similar, but the relevant output (spreading of
infections) was still significantly changed (a factor of two faster
spread in schools for example). See page 107.
*** 112-135: Applications & extensions
Three significant programs: 1992 - present
+ TRANSIMS: Urban transport planning (1991-2001)
++ Long term policies, first use of HPC for social sciences
+ CNIMS: National Incident management system (2005-present)
++ Interdependent infrastructure modeling and simulation, short-term planning and response for large scale disasters
+ Simdemics: Real-time epidemic planning and response
++ Planning and response; short time scale (1-6 months)
*** 136-139: Concluding remarks
Read 2016-10-10.
** Python tutorial
https://docs.python.org/2.7/tutorial/
2016-09-10: Started: [[https://docs.python.org/2.7/tutorial/appetite.html][1]], [[https://docs.python.org/2.7/tutorial/interpreter.html][2]], [[https://docs.python.org/2.7/tutorial/introduction.html][3]]
2016-09-11: [[https://docs.python.org/2.7/tutorial/controlflow.html][4]], [[https://docs.python.org/2.7/tutorial/datastructures.html][5]]
2016-09-12: [[https://docs.python.org/2.7/tutorial/modules.html][6]], [[https://docs.python.org/2.7/tutorial/inputoutput.html][7]]
2016-09-17: [[https://docs.python.org/2.7/tutorial/errors.html][8]]
2016-09-18: [[https://docs.python.org/2.7/tutorial/classes.html][9]]
2016-09-21: [[https://docs.python.org/2.7/tutorial/stdlib.html][10]], [[https://docs.python.org/2.7/tutorial/stdlib2.html][11]]
2016-09-23: [[https://docs.python.org/2.7/tutorial/whatnow.html][12]]

2016-09-29: [[https://docs.python.org/3.5/library/index.html][StdLib]], [[https://docs.python.org/3.5/library/intro.html][Intro]]

** Apache Spark Overview

Short note by Ingo Brauckhoff (ATOS). Nice to note that Spark is a
domain specific language based on functional programming technology.
A bit more worrying (form the HPC point of view) that it is based on
the Java Virtual Machine which may cause trouble.

** Contributions to a computational theory of policy advice and avoidability
https://www.pik-potsdam.de/members/botta/publications-botta-16-jfp-original.pdf

2016-08-23: Read until page 20.

** Sequential Decision Problems, Dependent Types and Generic Solutions
Botta, Jansson, Ionescu, Christiansen, Brady
http://www.cse.chalmers.se/~patrikj/papers/SeqDecProbDepType_LMCS_2016_preprint.pdf
https://github.com/nicolabotta/SeqDecProbs/blob/master/README.md
Read 2016-08-21. Fixed typos.

** CoeGSS review material
01-Welcome-to-CoeGSS_Carlo-Jaeger.pptx
02_The_CoeGSS_Service_Portfolio_Identified_Services_Michael_Gienger_HLRS.pptx
03_Positioning_CoeGSS_in_the_Ecosystem_Daniel_Field_ATOS.pptx
04_Portal Presentation_Javi_Nieto_ATOS.pptx
05_Center_Activities_Marcin_Lawenda_PSNC.pptx
06_WP4_SarahWolf_GCF.pptx
07_Centre_Operation_WP5_Michael_Gienger_HLRS.pptx
08_Achieving_Impact_Leonardo_Camiciott_TOP-IX.pptx
09a_WP1_AdministrativeManagement_Carlo-Jaeger.pptx
09b_Technical_Management_WP1_Michael_Gienger_HLRS.pptx

** GSS online course https://www.futurelearn.com/courses/global-systems-science/1/todo/3655
*** DONE 1.1 An introduction to Global Systems Science
*** DONE 1.2 Policy challenges in Global Systems Science
*** DONE 1.3 Policy Makers
*** DONE 1.4 Citizens in the policy loop
*** DONE 1.5 Epidemiology
*** DONE 1.6 Finance
*** DONE 1.7 Cities
*** DONE 1.8 The internet
*** DONE 1.9 The Tidworth Mums
*** DONE 1.10 Climate Change
*** DONE 1.11 An overview of Global Systems Science
*** DONE 2.1 An overview of Week 2
*** DONE 2.2 Prediction and the policy dilemma
*** DONE 2.3 Unintended consequences
*** DONE 2.4 Initial conditions and extreme events
*** DONE 2.5 Prediction and policy
*** DONE 2.6 Systems
*** DONE 2.7 Negative and positive feedback
*** DONE 2.8 Balancing feedback loops
*** DONE 2.9 System dynamics
*** DONE 2.10 Multilevel systems
*** DONE 2.11 Systemic problems and policy
*** DONE 2.12 Policy design
*** DONE 2.13 The science of complex systems
*** DONE 2.14 Policy informatics
*** DONE 2.15 Global Systems Science for policy
*** DONE 2.16 Conclusion to the course
Finished 2016-05-18.
** [Exascale computing and big data](http://cacm.acm.org/magazines/2015/7/188732-exascale-computing-and-big-data/fulltext)
2016-05-17
** [Learning Haskell Data Analysis](https://www.packtpub.com/big-data-and-business-intelligence/learning-haskell-data-analysis)
   James Church

Interesting and useful, but with many typos. (The typos encourage you
to work with the text to get the code running which is good for
learning;-)

*** 2015-09-14: Read pages [1-21 preface]
*** 2015-09-24: Ch 1: pages 1-18. Created [a repo for notes and code](https://github.com/patrikja/LearningHaskellDataAnalysis/)
*** 2015-09-27: Ch 2: pages 19-40. Added code to the repo.
*** 2015-10-03: Ch 3: pages 41-56. Done.
*** 2015-10-16: Ch 4: pages 57-76. Done.
*** 2015-10-20: Ch 5: pages 77-96. Done.
*** 2015-10-21: Ch 6: pages 77-114. Done.
*** 2015-10-22: Ch 7: pages 115-136. Done.
*** 2015-10-29: Ch 8: pages 137-159. Done.
*** 2015-10-31: App.: pages 160-167. Done.
** CoeGSS D3.2 version 1.0
+ Read T3.6 (2016-03-22)
** CoeGSS D3.2 version 0.9 + reviews
Read 2016-03-17.
** CoeGSS D3.1
Read 2016-03-11.
** CoeGSS D4.1 - First Report on Pilot Requirements
Version 2 (2016-01-26)
+ Editor: Sarah Wolf
+ Authors: D. Paolotti, M. Tizzoni (ISI), M. Edwards (CoSMo), S. Fürst, A. Geiges, A. Ireland, F. Schütze, G. Steudle (GCF),
+ Internal reviewers: Miroslaw Kupczyk (PSNC), Cezar Ionescu (Chalmers), Jochen Buchholz (USTUTT).

Read 2016-02-13.

*** 1 Introduction
**** 1.1 The CoeGSS pilots
**** 1.2 Synthetic information systems
**** 1.3 About this document
*** 2 Common requirements of all pilots
**** 2.1 Interaction between HPC and GSS experts
**** 2.2 Training
**** 2.3 Access and computing time
**** 2.4 Building a CoeGSS synthetic information system

[...] It is a stated aim of CoeGSS to enhance and extend the
capabilities of existing frameworks in the following directions:
1. increase the scale to global populations (billions of agents)
2. develop new methods for deriving relationships and activity patterns for agents
3. incorporate new data from social media sources in a running simulation
4. visualise the results of simulations and be able to interact with them in real time
5. test, verify, and validate the results

• Defining the system
• Collecting data
• Building a shared pool of data
• Pre-processing data
• Ensuring and tracking data quality
• Generation of synthetic populations
• Agent-based modelling
• Prototyping
• Performing sensitivity analysis and calibrating models
• Installing code
• Optimizing code
• Running simulations
• Analysing output
• Visualising output and results
• Creating a user-friendly interface for non-experts

+ A remark about the use of existing software tools: licensing.

*** 3 Task 4.1: Health Habits
**** 3.1 Short problem description
**** 3.2 Initial example 1: smoking
**** 3.3 Initial example 2: obesity
**** 3.4 Initial synthetic population and workflow
**** 3.5 Data requirements
**** 3.6 Software requirements
**** 3.7 Gathering experience
In particular, goals of the initial test should be:
• to identify and resolve the intellectual property issues arising
• to define HPC software requirements for the SI system;
• to identify any code compatibility issue between the systems;
• to identify the best options for parallelization of the GLEAMviz server unit;
• to assess the gain of performance to be expected by running the SI system on a HPC.

*** 4 Task 4.2: Green Growth
**** 4.1 Short problem description
**** 4.2 Initial example: transport
**** 4.3 Initial synthetic population
**** 4.4 Preliminary, or training model
**** 4.5 Data requirements
**** 4.6 Software requirements
**** 4.7 Visualisation requirements

*** 5 Task 4.3 Global Urbanization
**** 5.1 Short problem description
**** 5.2 Workflow quick overview
**** 5.3 City pilot and synthetic populations’ details
***** 5.3.1 Transportation model
***** 5.3.2 Pollution model
***** 5.3.3 Real estate model
***** 5.3.4 Population model
***** 5.3.5 Economic model
***** 5.3.6 Synthetic population refinements
**** 5.4 Data requirements
**** 5.5 Software requirements
*** 6 Task 4.4 (Future Applications)
*** 7 Conclusion
*** 8 References
** CoeGSS D5.1 – Definition of the CoeGSS Operation Environment

Read 2016-04-25. An overview of the resources available at HLRS and
PSNC for CoeGSS.
** CoeGSS D4.4 (version 2016-09-11)
2016-09-19: Finished reviewing the report (pages 64-105)
2016-09-16: Read more (up to 63) + sent review report (6h work)
2016-09-12: Started reading (up to page 20)
