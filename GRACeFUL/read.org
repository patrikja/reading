#
\bibliography{read.bib}

* Functional logic programming
** Functional logic programming \cite{Antoy:2010:FLP:1721654.1721675}
http://cacm.acm.org/magazines/2010/4/81495-functional-logic-programming/fulltext
Read 2015-06-01. Simple overview of FLP using Curry in the Communications of ACM.
Syntax very close to Haskell, just added syntax for indicating free variables.
Semantics: smart search (narrowing) in combination with usual FP reduction.
** Higher-Order Logic Programming                    Skimmed 2015-05-28.
G. Nadathur and D. Miller, Higher-Order Logic Programming, in Handbook of Logic in Artificial Intelligence and Logic Programming, D. M. Gabbay, C. J. Hogger and J. A. Robinson (eds.), Oxford University Press, January 1998, pages 499--590. (dvi) (ps)
http://www.lix.polytechnique.fr/~dale/papers/Handbook_Logic_AI_LP.pdf
** LambdaProlog
https://github.com/teyjus/teyjus/wiki/LambdaProlog
** Curry
http://en.wikipedia.org/wiki/Curry_(programming_language)
** Mercury
http://en.wikipedia.org/wiki/Mercury_(programming_language)
** eprover:
*** System Description: E 1.8
http://www4.in.tum.de/~schulz/PAPERS/schulz_e18.pdf
2016-01-09: Read all nine pages. Gives a top-level summary of the implementation and performance of eprover version 1.8.
  Added a few test examples to https://github.com/josefs/autosar
*** E-prover user manual
http://wwwlehre.dhbw-stuttgart.de/~sschulz/WORK/E_DOWNLOAD/V_1.9/eprover.pdf
*** Forall x (logic course)
http://www.fecundity.com/codex/forallx.pdf
* Policy Analysis
** \cite{WalkerPolicyAnalysis2000}                   Read 2015-05-11. Note: "Sadie 1"
http://onlinelibrary.wiley.com/doi/10.1002/1099-1360%28200001/05%299:1/3%3C11::AID-MCDA264%3E3.0.CO;2-3/abstract

Policy analysis: a systematic approach to supporting policymaking in the public sector
Warren E. Walker1,2,*

Article first published online: 7 SEP 2000
DOI: 10.1002/1099-1360(200001/05)9:1/3<11::AID-MCDA264>3.0.CO;2-3

** \cite{MayeretalPerspectivesonPolicyAnalysis2013}  Read 2015-05-14. Note: "Sadie 2"

TODO: check out https://scholar.google.co.uk/citations?user=xfNncLAAAAAJ&hl=en
and in particular "The roles of computer models in the environmental policy life cycle"

** \cite{Sabatier_AdvocacyCoalitionFramework_1988}   Read 2015-05-15. Note: "Sadie 3"

On long-term stability and changes in policy-making.

** \cite{deBruijnHerder2009}                         Read 2015-05-15. Note: "Sadie 4"
System and Actor Perspectives on Sociotechnical Systems
Hans de Bruijn and Paulien M. Herder
2009
IEEE
http://dx.doi.org/10.1109/TSMCA.2009.2025452
* GRACeFUL deliverables and reports
** DSL workpackage
*** D4.1: [Formal Concept Maps Elements Descriptions (GRACeFUL D4.1)](https://github.com/patrikja/GRACeFUL/blob/master/deliverables/d4.1.pdf)
Authors: Cezar Ionescu and Patrik Jansson
Source code: https://github.com/patrikja/GRACeFUL/blob/master/deliverables/d4.1/
** D2.2 CRUD Analysis Report
2015-07-22: Read and commented the draft
** D2.3 CRUD RATs Key Requirements
2016-01-07: Read and commented the draft by Michiel Blind
** Y1 technical report
2016-02-24: Read and commented the draft by Tom Creemers.
* Functional FEEC

** Algorithm 839: FIAT, A New Paradigm for Computing Finite Element Basis Functions
ROBERT C. KIRBY
The University of Chicago
https://sites.baylor.edu/robert_kirby/files/2015/01/fiat-toms-2004-1xo44jy.pdf
[[file:read.bib::journals/toms/Kirby04][Kirby 2004: Algorithm]]

Early work on using higher-order functions and overloading to
implement a library generating finite element basis functions.
** A Compiler for Variational Forms
[[file:read.bib::journals/toms/KirbyL06][Kirby & Logg 2006]]

A DSL for describing multilinear variational forms for the finite
element method. A compiler (in Python) from the embedded DSL to C++
code using DOLFIN (+ a few more backends).
